setwd("C:/Users/koakepan/OneDrive - Microsoft/University of Colorado Boulder Master's Degree in Data Science/Data Science as a Field")
install.packages("tidyverse")
knitr::opts_chunk$set(echo = TRUE)
# install.packages("tidyverse")
library(tidyverse)
df = read_csv("https://data.cityofnewyork.us/api/views/833y-fsy8/rows.csv?accessType=DOWNLOAD")
View(df)
head(df)
summary(df)
head(df)
cols(df)
names(df)
sum(is.na(df))
table(sum(is.na(df)))
colsum(is.na(df)))
colsum(is.na(df))
colsum(is.na(df))
lapply(z, function(x) sum(is.na(df)))
lapply(df, function(x) sum(is.na(x)))
df %>% filter(PERP_AGE_GROUP == NA)
df %>% filter(is.NA(PERP_AGE_GROUP))
df %>% filter(is.na(PERP_AGE_GROUP))
df %>% filter(is.na(PERP_AGE_GROUP) == TRUE)
df = df %>% select(INCIDENT_KEY,
OCCUR_DATE,
OCCUR_TIME,
BORO,
STATISTICAL_MURDER_FLAG,
PERP_AGE_GROUP,
PERP_SEX,
PERP_RACE,
VIC_AGE_GROUP,
VIC_SEX,
VIC_RACE,
Latitude,
Longitude)
# Return the column name along with the missing values
lapply(df, function(x) sum(is.na(x)))
df.head()
df.head()
head(df)
df = df %>%
replace_na(list(PERP_AGE_GROUP = "Unknown", PERP_SEX = "Unknown", PERP_RACE = "Unknown")) %>%
as_factor(BORO)
df = df %>%
replace_na(list(PERP_AGE_GROUP = "Unknown", PERP_SEX = "Unknown", PERP_RACE = "Unknown"))
head(df)
df = df %>%
replace_na(list(PERP_AGE_GROUP = "Unknown", PERP_SEX = "Unknown", PERP_RACE = "Unknown")) %>%
convert(chr(INCIDENT_KEY))
df = df %>%
replace_na(list(PERP_AGE_GROUP = "Unknown", PERP_SEX = "Unknown", PERP_RACE = "Unknown")) %>%
df$INCIDENT_KEY = as.character(df$INCIDENT_KEY)
df = df %>%
replace_na(list(PERP_AGE_GROUP = "Unknown", PERP_SEX = "Unknown", PERP_RACE = "Unknown"))
df$INCIDENT_KEY = as.character(df$INCIDENT_KEY)
df$BORO = as.factor(df$BORO)
summary(df)
View(df)
df = read_csv("https://data.cityofnewyork.us/api/views/833y-fsy8/rows.csv?accessType=DOWNLOAD")
head(df)
df = df %>% select(INCIDENT_KEY,
OCCUR_DATE,
OCCUR_TIME,
BORO,
STATISTICAL_MURDER_FLAG,
PERP_AGE_GROUP,
PERP_SEX,
PERP_RACE,
VIC_AGE_GROUP,
VIC_SEX,
VIC_RACE,
Latitude,
Longitude)
# Return the column name along with the missing values
lapply(df, function(x) sum(is.na(x)))
df = df %>%
replace_na(list(PERP_AGE_GROUP = "Unknown", PERP_SEX = "Unknown", PERP_RACE = "Unknown"))
df$INCIDENT_KEY = as.character(df$INCIDENT_KEY)
df$BORO = as.factor(df$BORO)
df$PERP_AGE_GROUP = as.factor(df$PERP_AGE_GROUP)
df$PERP_SEX = as.factor(df$PERP_SEX)
df$PERP_RACE = as.factor(df$PERP_RACE)
df$VIC_AGE_GROUP = as.factor(df$VIC_AGE_GROUP)
df$VIC_SEX = as.factor(df$VIC_SEX)
df$VIC_RACE = as.factor(df$VIC_RACE)
# Return summary statistics
summary(df)
df = read_csv("https://data.cityofnewyork.us/api/views/833y-fsy8/rows.csv?accessType=DOWNLOAD")
head(df)
df_2 = df %>% select(INCIDENT_KEY,
OCCUR_DATE,
OCCUR_TIME,
BORO,
STATISTICAL_MURDER_FLAG,
PERP_AGE_GROUP,
PERP_SEX,
PERP_RACE,
VIC_AGE_GROUP,
VIC_SEX,
VIC_RACE,
Latitude,
Longitude)
# Return the column name along with the missing values
lapply(df_2, function(x) sum(is.na(x)))
View(df_2)
df_2 = df_2 %>%
replace_na(list(PERP_AGE_GROUP = "Unknown", PERP_SEX = "Unknown", PERP_RACE = "Unknown")) %>%
recode(PERP_AGE_GROUP, UNKNOWN = "Unknown") %>%
recode(PERP_SEX, U = "Unknown") %>%
recode(PERP_RACE, UNKNOWN = "Unknown")
recode(df_2$PERP_AGE_GROUP, UNKNOWN = "Unknown")
df_2$PERP_AGE_GROUP = recode(df_2$PERP_AGE_GROUP, UNKNOWN = "Unknown")
df_2$PERP_SEX = recode(df_2$PERP_SEX, U = "Unknown")
df_2$PERP_RACE = recode(df_2$PERP_RACE, UNKNOWN = "Unknown")
# Return summary statistics
summary(df_2)
df_2 = df %>% select(INCIDENT_KEY,
OCCUR_DATE,
OCCUR_TIME,
BORO,
STATISTICAL_MURDER_FLAG,
PERP_AGE_GROUP,
PERP_SEX,
PERP_RACE,
VIC_AGE_GROUP,
VIC_SEX,
VIC_RACE,
Latitude,
Longitude)
# Return the column name along with the missing values
lapply(df_2, function(x) sum(is.na(x)))
df_2 = df_2 %>%
replace_na(list(PERP_AGE_GROUP = "Unknown", PERP_SEX = "Unknown", PERP_RACE = "Unknown"))
df_2$PERP_AGE_GROUP = recode(df_2$PERP_AGE_GROUP, UNKNOWN = "Unknown")
df_2$PERP_SEX = recode(df_2$PERP_SEX, U = "Unknown")
df_2$PERP_RACE = recode(df_2$PERP_RACE, UNKNOWN = "Unknown")
df_2$INCIDENT_KEY = as.character(df_2$INCIDENT_KEY)
df_2$BORO = as.factor(df_2$BORO)
df_2$PERP_AGE_GROUP = as.factor(df_2$PERP_AGE_GROUP)
df_2$PERP_SEX = as.factor(df_2$PERP_SEX)
df_2$PERP_RACE = as.factor(df_2$PERP_RACE)
df_2$VIC_AGE_GROUP = as.factor(df_2$VIC_AGE_GROUP)
df_2$VIC_SEX = as.factor(df_2$VIC_SEX)
df_2$VIC_RACE = as.factor(df_2$VIC_RACE)
# Return summary statistics
summary(df_2)
df_2 = df %>% select(INCIDENT_KEY,
OCCUR_DATE,
OCCUR_TIME,
BORO,
STATISTICAL_MURDER_FLAG,
PERP_AGE_GROUP,
PERP_SEX,
PERP_RACE,
VIC_AGE_GROUP,
VIC_SEX,
VIC_RACE,
Latitude,
Longitude)
# Return the column name along with the missing values
lapply(df_2, function(x) sum(is.na(x)))
df_2 = df_2 %>%
replace_na(list(PERP_AGE_GROUP = "Unknown", PERP_SEX = "Unknown", PERP_RACE = "Unknown"))
df_2$PERP_AGE_GROUP = recode(df_2$PERP_AGE_GROUP, UNKNOWN = "Unknown")
df_2$PERP_SEX = recode(df_2$PERP_SEX, U = "Unknown")
df_2$PERP_RACE = recode(df_2$PERP_RACE, UNKNOWN = "Unknown")
df_2$VIC_SEX   = recode(df_2$VIC_SEX, U = "Unknown")
df_2$VIC_RACE   = recode(df_2$VIC_RACE, UNKNOWN = "Unknown")
df_2$INCIDENT_KEY = as.character(df_2$INCIDENT_KEY)
df_2$BORO = as.factor(df_2$BORO)
df_2$PERP_AGE_GROUP = as.factor(df_2$PERP_AGE_GROUP)
df_2$PERP_SEX = as.factor(df_2$PERP_SEX)
df_2$PERP_RACE = as.factor(df_2$PERP_RACE)
df_2$VIC_AGE_GROUP = as.factor(df_2$VIC_AGE_GROUP)
df_2$VIC_SEX = as.factor(df_2$VIC_SEX)
df_2$VIC_RACE = as.factor(df_2$VIC_RACE)
# Return summary statistics
summary(df_2)
table(df_2$BORO,df_2$STATISTICAL_MURDER_FLAG)
ggplot(as.data.frame(df_3), aes(x = BORO, y = Freq, fill = STATISTICAL_MURDER_FLAG)) +
geom_bar(stat="identity")
df_3 = table(df_2$BORO,df_2$STATISTICAL_MURDER_FLAG)
ggplot(as.data.frame(df_3), aes(x = BORO, y = Freq, fill = STATISTICAL_MURDER_FLAG)) +
geom_bar(stat="identity")
ggplot(as.data.frame(table(df_2$BORO,df_2$STATISTICAL_MURDER_FLAG)),
aes(x = BORO, y = Freq, fill = STATISTICAL_MURDER_FLAG)) +
geom_bar(stat="identity")
ggplot(as.data.frame(table(df_2$BORO,df_2$STATISTICAL_MURDER_FLAG)),
aes(x = df_2$BORO, y = Freq, fill = STATISTICAL_MURDER_FLAG)) +
geom_bar(stat="identity")
ggplot(as.data.frame(table(df_2$BORO,df_2$STATISTICAL_MURDER_FLAG)),
aes(x = df_2$BORO, y = Freq, fill = df2_$STATISTICAL_MURDER_FLAG)) +
geom_bar(stat="identity")
ggplot(as.data.frame(table(df_2$BORO,df_2$STATISTICAL_MURDER_FLAG)),
aes(x = df_2$BORO, y = Freq, fill = df_2$STATISTICAL_MURDER_FLAG)) +
geom_bar(stat="identity")
g <- ggplot(df_2, aes(BORO, STATISTICAL_MURDER_FLAG)
g
g <- ggplot(df_2, aes(BORO, STATISTICAL_MURDER_FLAG))
g
g <- ggplot(df_2, aes(x = BORO)) +
geom_bar()
g
g <- ggplot(df_2, aes(x = BORO)) +
geom_bar() +
theme_minimal()
g
g <- ggplot(df_2, aes(x = BORO)) +
geom_bar() +
geom_tile("Which part of New York has the most number of incidents?") +
xlab("Boroughs of New York City") +
ylab("Count of Incidents")
g <- ggplot(df_2, aes(x = BORO)) +
geom_bar() +
geom_tile("Which part of New York has the most number of incidents?") +
xlab("Boroughs of New York City") +
ylab("Count of Incidents") +
theme_minimal()
g <- ggplot(df_2, aes(x = BORO)) +
geom_bar() +
geom_tile("Which part of New York has the most number of incidents?") +
xlab("Boroughs of New York City") +
theme_minimal()
g <- ggplot(df_2, aes(x = BORO)) +
geom_bar() +
geom_tile("Which part of New York has the most number of incidents?") +
labs(title = "Boroughs of New York City",
x = "Boroughs of New York City",
y = "Count of Incidents") +
theme_minimal()
g <- ggplot(df_2, aes(x = BORO)) +
geom_bar() +
# geom_tile("Which part of New York has the most number of incidents?") +
# labs(title = "Boroughs of New York City",
#      x = "Boroughs of New York City",
#      y = "Count of Incidents") +
theme_minimal()
g
g <- ggplot(df_2, aes(x = BORO)) +
geom_bar() +
labs(title = "Boroughs of New York City",
x = "Boroughs of New York City",
y = "Count of Incidents") +
theme_minimal()
g
table(df_2$BORO, df_2$STATISTICAL_MURDER_FLAG)
View(df_2)
library(lubridate)
View(df_2)
df_2$OCCUR_DAY = mdy(df_2$OCCUR_DATE)
df_2$OCCUR_DAY = wday(df_2$OCCUR_DAY)
df_2$OCCUR_DAY = mdy(df_2$OCCUR_DATE)
df_2$OCCUR_DAY = wday(df_2$OCCUR_DAY, label = TRUE)
df_2$OCCUR_HOUR = hour(hms(as.character(df_2$OCCUR_TIME)))
df_2$OCCUR_DAY = mdy(df_2$OCCUR_DATE)
df_2$OCCUR_DAY = wday(df_2$OCCUR_DAY, label = TRUE)
df_2$OCCUR_HOUR = hour(hms(as.character(df_2$OCCUR_TIME)))
df_3 = df_2 %>%
group_by(OCCUR_DAY) %>%
count()
df_4 = df_2 %>%
group_by(OCCUR_HOUR) %>%
count()
View(df_4)
View(df_3)
g <- ggplot(df_3, aes(x = OCCUR_DAY, y = n)) +
geom_boxplot() +
labs(title = "Which day should people in New York be cautious of incidents?",
x = "Incident Occurence Day",
y = "Count of Incidents") +
theme_minimal()
g
View(df_3)
g <- ggplot(df_3, aes(x = OCCUR_DAY, y = n)) +
geom_col() +
labs(title = "Which day should people in New York be cautious of incidents?",
x = "Incident Occurence Day",
y = "Count of Incidents") +
theme_minimal()
g
g <- ggplot(df_3, aes(x = OCCUR_DAY, y = n)) +
geom_dotplot() +
labs(title = "Which day should people in New York be cautious of incidents?",
x = "Incident Occurence Day",
y = "Count of Incidents") +
theme_minimal()
g
g <- ggplot(df_3, aes(x = OCCUR_DAY, y = n)) +
geom_violin() +
labs(title = "Which day should people in New York be cautious of incidents?",
x = "Incident Occurence Day",
y = "Count of Incidents") +
theme_minimal()
g
g <- ggplot(df_3, aes(x = OCCUR_DAY, y = n)) +
geom_col() +
labs(title = "Which day should people in New York be cautious of incidents?",
x = "Incident Occurence Day",
y = "Count of Incidents") +
theme_minimal()
g
g <- ggplot(df_3, aes(x = OCCUR_HOUR, y = n)) +
geom_col() +
labs(title = "Which time should people in New York be cautious of incidents?",
x = "Incident Occurence Hour",
y = "Count of Incidents") +
theme_minimal()
g
View(df_4)
g <- ggplot(df_4, aes(x = OCCUR_HOUR, y = n)) +
geom_col() +
labs(title = "Which time should people in New York be cautious of incidents?",
x = "Incident Occurence Hour",
y = "Count of Incidents") +
theme_minimal()
g
g <- ggplot(df_4, aes(x = OCCUR_HOUR, y = n)) +
geom_line() +
labs(title = "Which time should people in New York be cautious of incidents?",
x = "Incident Occurence Hour",
y = "Count of Incidents") +
theme_minimal()
g
table(df_2$PERP_AGE_GROUP, df_2$VIC_AGE_GROUP)
table(df_2$PERP_SEX, df_2$VIC_SEX)
table(df_2$PERP_RACE, df_2$VIC_RACE)
# Remove extreme values in data
df_2 = df_2[!(df_2$PERP_AGE_GROUP=="1020" | df_2$PERP_AGE_GROUP=="224" | df_2$PERP_AGE_GROUP=="940"),]
df_2 = df %>% select(INCIDENT_KEY,
OCCUR_DATE,
OCCUR_TIME,
BORO,
STATISTICAL_MURDER_FLAG,
PERP_AGE_GROUP,
PERP_SEX,
PERP_RACE,
VIC_AGE_GROUP,
VIC_SEX,
VIC_RACE,
Latitude,
Longitude)
# Return the column name along with the missing values
lapply(df_2, function(x) sum(is.na(x)))
# Tidy and transform data
df_2 = df_2 %>%
replace_na(list(PERP_AGE_GROUP = "Unknown", PERP_SEX = "Unknown", PERP_RACE = "Unknown"))
df_2$PERP_AGE_GROUP = recode(df_2$PERP_AGE_GROUP, UNKNOWN = "Unknown")
df_2$PERP_SEX = recode(df_2$PERP_SEX, U = "Unknown")
df_2$PERP_RACE = recode(df_2$PERP_RACE, UNKNOWN = "Unknown")
df_2$VIC_SEX   = recode(df_2$VIC_SEX, U = "Unknown")
df_2$VIC_RACE   = recode(df_2$VIC_RACE, UNKNOWN = "Unknown")
df_2$INCIDENT_KEY = as.character(df_2$INCIDENT_KEY)
df_2$BORO = as.factor(df_2$BORO)
df_2$PERP_AGE_GROUP = as.factor(df_2$PERP_AGE_GROUP)
df_2$PERP_SEX = as.factor(df_2$PERP_SEX)
df_2$PERP_RACE = as.factor(df_2$PERP_RACE)
df_2$VIC_AGE_GROUP = as.factor(df_2$VIC_AGE_GROUP)
df_2$VIC_SEX = as.factor(df_2$VIC_SEX)
df_2$VIC_RACE = as.factor(df_2$VIC_RACE)
# Remove extreme values in data
df_2 = df_2[!(df_2$PERP_AGE_GROUP=="1020" | df_2$PERP_AGE_GROUP=="224" | df_2$PERP_AGE_GROUP=="940"),]
# Return summary statistics
summary(df_2)
g <- ggplot(df_2, aes(x = BORO)) +
geom_bar() +
labs(title = "Boroughs of New York City",
x = "Boroughs of New York City",
y = "Count of Incidents") +
theme_minimal()
g
table(df_2$BORO, df_2$STATISTICAL_MURDER_FLAG)
df_2$OCCUR_DAY = mdy(df_2$OCCUR_DATE)
df_2$OCCUR_DAY = wday(df_2$OCCUR_DAY, label = TRUE)
df_2$OCCUR_HOUR = hour(hms(as.character(df_2$OCCUR_TIME)))
df_3 = df_2 %>%
group_by(OCCUR_DAY) %>%
count()
df_4 = df_2 %>%
group_by(OCCUR_HOUR) %>%
count()
g <- ggplot(df_3, aes(x = OCCUR_DAY, y = n)) +
geom_col() +
labs(title = "Which day should people in New York be cautious of incidents?",
x = "Incident Occurence Day",
y = "Count of Incidents") +
theme_minimal()
g
g <- ggplot(df_4, aes(x = OCCUR_HOUR, y = n)) +
geom_line() +
labs(title = "Which time should people in New York be cautious of incidents?",
x = "Incident Occurence Hour",
y = "Count of Incidents") +
theme_minimal()
g
table(df_2$PERP_AGE_GROUP, df_2$VIC_AGE_GROUP)
View(df_2)
df_2 = df %>% select(INCIDENT_KEY,
OCCUR_DATE,
OCCUR_TIME,
BORO,
STATISTICAL_MURDER_FLAG,
PERP_AGE_GROUP,
PERP_SEX,
PERP_RACE,
VIC_AGE_GROUP,
VIC_SEX,
VIC_RACE,
Latitude,
Longitude)
# Return the column name along with the missing values
lapply(df_2, function(x) sum(is.na(x)))
# Tidy and transform data
df_2 = df_2 %>%
replace_na(list(PERP_AGE_GROUP = "Unknown", PERP_SEX = "Unknown", PERP_RACE = "Unknown"))
# Remove extreme values in data
df_2 = subset(df_2, PERP_AGE_GROUP!="1020" & PERP_AGE_GROUP!="224" & PERP_AGE_GROUP!="940")
df_2$PERP_AGE_GROUP = recode(df_2$PERP_AGE_GROUP, UNKNOWN = "Unknown")
df_2$PERP_SEX = recode(df_2$PERP_SEX, U = "Unknown")
df_2$PERP_RACE = recode(df_2$PERP_RACE, UNKNOWN = "Unknown")
df_2$VIC_SEX   = recode(df_2$VIC_SEX, U = "Unknown")
df_2$VIC_RACE   = recode(df_2$VIC_RACE, UNKNOWN = "Unknown")
df_2$INCIDENT_KEY = as.character(df_2$INCIDENT_KEY)
df_2$BORO = as.factor(df_2$BORO)
df_2$PERP_AGE_GROUP = as.factor(df_2$PERP_AGE_GROUP)
df_2$PERP_SEX = as.factor(df_2$PERP_SEX)
df_2$PERP_RACE = as.factor(df_2$PERP_RACE)
df_2$VIC_AGE_GROUP = as.factor(df_2$VIC_AGE_GROUP)
df_2$VIC_SEX = as.factor(df_2$VIC_SEX)
df_2$VIC_RACE = as.factor(df_2$VIC_RACE)
# Return summary statistics
summary(df_2)
g <- ggplot(df_2, aes(x = BORO)) +
geom_bar() +
labs(title = "Boroughs of New York City",
x = "Boroughs of New York City",
y = "Count of Incidents") +
theme_minimal()
g
table(df_2$BORO, df_2$STATISTICAL_MURDER_FLAG)
df_2$OCCUR_DAY = mdy(df_2$OCCUR_DATE)
df_2$OCCUR_DAY = wday(df_2$OCCUR_DAY, label = TRUE)
df_2$OCCUR_HOUR = hour(hms(as.character(df_2$OCCUR_TIME)))
df_3 = df_2 %>%
group_by(OCCUR_DAY) %>%
count()
df_4 = df_2 %>%
group_by(OCCUR_HOUR) %>%
count()
g <- ggplot(df_3, aes(x = OCCUR_DAY, y = n)) +
geom_col() +
labs(title = "Which day should people in New York be cautious of incidents?",
x = "Incident Occurence Day",
y = "Count of Incidents") +
theme_minimal()
g
g <- ggplot(df_4, aes(x = OCCUR_HOUR, y = n)) +
geom_line() +
labs(title = "Which time should people in New York be cautious of incidents?",
x = "Incident Occurence Hour",
y = "Count of Incidents") +
theme_minimal()
g
table(df_2$PERP_AGE_GROUP, df_2$VIC_AGE_GROUP)
table(df_2$PERP_SEX, df_2$VIC_SEX)
table(df_2$PERP_RACE, df_2$VIC_RACE)
View(df_2)
View(df_2)
knitr::opts_chunk$set(echo = TRUE)
# Logistics Regression
glm.fit <- glm(STATISTICAL_MURDER_FLAG ~ PERP_RACE + PERP_SEX + PERP_AGE_GROUP + OCCUR_HOUR + OCCUR_DAY + Latitude + Longitude, data = df_2, family = binomial)
summary(glm.fit)
knitr::opts_chunk$set(echo = TRUE)
g <- ggplot(df_2, aes(x = BORO)) +
geom_bar(color = "blue") +
labs(title = "Boroughs of New York City",
x = "Boroughs of New York City",
y = "Count of Incidents") +
theme_minimal()
